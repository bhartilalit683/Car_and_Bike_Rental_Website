trigger:
- main  # Or the branch you want to trigger the pipeline on

pool:
  name: 'windows'  # Or specify your self-hosted agent pool

jobs:
- job: DeployPHPWebsite
  displayName: 'Deploy PHP Website to Nginx Server'
  pool:
    name: 'windows'  # Or specify your self-hosted agent pool
    
  steps:
  - task: SSH@0
    displayName: 'Create target directory and deploy files'
    inputs:
      sshEndpoint: 'ubuntu'  # Name of your SSH service connection
      runOptions: 'inline'
      inline: |
        # Define the target directory
        TARGET_DIR="/var/www/Car_and_Bike_Rental_Website"

        # Ensure the target directory exists, if not, create it
        if [ ! -d "$TARGET_DIR" ]; then
          echo "Directory $TARGET_DIR does not exist. Creating it now."
          sudo mkdir -p "$TARGET_DIR"
        else
          echo "Directory $TARGET_DIR already exists."
        fi

        # If the directory is not empty, clean it up
        if [ "$(ls -A $TARGET_DIR)" ]; then
          echo "$TARGET_DIR is not empty. Cleaning up the directory."
          sudo rm -rf "$TARGET_DIR/*"
        else
          echo "$TARGET_DIR is empty. Proceeding with clone."
        fi

        # Clone the Git repository into the target directory
        echo "Cloning the Git repository..."
        sudo git clone https://github.com/bhartilalit683/Car_and_Bike_Rental_Website.git "$TARGET_DIR"

        # Check if git clone was successful
        if [ $? -eq 0 ]; then
          echo "Repository cloned successfully."
        else
          echo "Git clone failed. Exiting."
          exit 1
        fi

        # Set ownership and permissions for the cloned files
        echo "Setting ownership and permissions..."
        sudo chown -R www-data:www-data "$TARGET_DIR"
        sudo chmod -R 755 "$TARGET_DIR"

        # Optionally restart Nginx
        echo "Restarting Nginx service..."
        sudo systemctl restart nginx

        # Verify Nginx status (optional, for debugging purposes)
        sudo systemctl status nginx
